<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WatsonWebsocket</name>
    </assembly>
    <members>
        <member name="T:WatsonWebsocket.ClientMetadata">
            <summary>
            Client metadata.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientMetadata.Guid">
            <summary>
            Globally-unique identifier of the client.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientMetadata.IpPort">
            <summary>
            IP:port of the client.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientMetadata.Ip">
            <summary>
            IP address of the client.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientMetadata.Port">
            <summary>
            Port for the client.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientMetadata.Name">
            <summary>
            Name for the client, managed by the developer (you).
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientMetadata.Metadata">
            <summary>
            Metadata for the client, managed by the developer (you).
            </summary>
        </member>
        <member name="M:WatsonWebsocket.ClientMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.ClientMetadata.#ctor(System.Net.HttpListenerContext,System.Net.WebSockets.WebSocket,System.Net.WebSockets.WebSocketContext,System.Threading.CancellationTokenSource,System.Guid)">
            <summary>
            Instantiate.
            </summary>
            <param name="httpContext">HTTP context.</param>
            <param name="ws">Websocket.</param>
            <param name="wsContext">Websocket context.</param>
            <param name="tokenSource">Token source.</param>
            <param name="guid">Desired GUID to identify this client.</param>
        </member>
        <member name="M:WatsonWebsocket.ClientMetadata.ToString">
            <summary>
            Human-readable representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WatsonWebsocket.ConnectionEventArgs">
            <summary>
            Event arguments for when a client connects to the server.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ConnectionEventArgs.Client">
            <summary>
            Client metadata.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ConnectionEventArgs.HttpRequest">
            <summary>
            The HttpListenerRequest from the client.  Helpful for accessing HTTP request related metadata such as the querystring.
            </summary>
        </member>
        <member name="T:WatsonWebsocket.DisconnectionEventArgs">
            <summary>
            Event arguments for when a client disconnects from the server.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.DisconnectionEventArgs.Client">
            <summary>
            Client metadata.
            </summary>
        </member>
        <member name="T:WatsonWebsocket.MessageReceivedEventArgs">
            <summary>
            Event arguments for when a message is received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.MessageReceivedEventArgs.Client">
            <summary>
            Client metadata.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.MessageReceivedEventArgs.Data">
            <summary>
            The data received.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.MessageReceivedEventArgs.MessageType">
            <summary>
            The type of payload included in the message (Binary or Text).
            </summary>
        </member>
        <member name="T:WatsonWebsocket.Statistics">
            <summary>
            WatsonWebsocket statistics.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.StartTime">
            <summary>
            The time at which the client or server was started.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.UpTime">
            <summary>
            The amount of time which the client or server has been up.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.ReceivedBytes">
            <summary>
            The number of bytes received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.ReceivedMessages">
            <summary>
            The number of messages received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.ReceivedMessageSizeAverage">
            <summary>
            Average received message size in bytes.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.SentBytes">
            <summary>
            The number of bytes sent.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.SentMessages">
            <summary>
            The number of messages sent.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.SentMessageSizeAverage">
            <summary>
            Average sent message size in bytes.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.Statistics.#ctor">
            <summary>
            Initialize the statistics object.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.Statistics.ToString">
            <summary>
            Return human-readable version of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WatsonWebsocket.Statistics.Reset">
            <summary>
            Reset statistics other than StartTime and UpTime.
            </summary>
        </member>
        <member name="T:WatsonWebsocket.WatsonWsClient">
            <summary>
            Watson websocket client.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.AcceptInvalidCertificates">
            <summary>
            Indicate whether or not invalid or otherwise unverifiable certificates should be accepted.  Default is true.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.Connected">
            <summary>
            Indicates whether or not the client is connected to the server.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.EnableStatistics">
            <summary>
            Enable or disable statistics.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.KeepAliveInterval">
            <summary>
            Set KeepAlive to Connection Options.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsClient.MessageReceived">
            <summary>
            Event fired when a message is received.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsClient.ServerConnected">
            <summary>
            Event fired when the client connects successfully to the server. 
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsClient.ServerDisconnected">
            <summary>
            Event fired when the client disconnects from the server.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsClient.Logger">
            <summary>
            Method to invoke when sending a log message.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.GuidHeader">
            <summary>
            Header used by client to indicate which GUID should be assigned.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.Stats">
            <summary>
            Statistics.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.#ctor(System.String,System.Int32,System.Boolean,System.Guid)">
            <summary>
            Initializes the Watson websocket client.
            Be sure to call 'Start()' to start the client and connect to the server.
            </summary>
            <param name="serverIp">IP address of the server.</param>
            <param name="serverPort">TCP port of the server.</param>
            <param name="ssl">Enable or disable SSL.</param>
            <param name="guid">GUID you wish the server to use to identify this client.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.#ctor(System.Uri,System.Guid)">
            <summary>
            Initializes the Watson websocket client.
            Be sure to call 'Start()' to start the client and connect to the server.
            </summary>
            <param name="uri">The URI of the server endpoint.</param> 
            <param name="guid">GUID you wish the server to use to identify this client.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Dispose">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.ConfigureOptions(System.Action{System.Net.WebSockets.ClientWebSocketOptions})">
            <summary>
            Pre-configure websocket client options prior to connecting to the server.
            </summary>
            <returns>WatsonWsClient.</returns>
            <exception cref="T:System.PlatformNotSupportedException"></exception>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.AddCookie(System.Net.Cookie)">
            <summary>
            Add a cookie prior to connecting to the server.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Start(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Start the client and connect to the server.
            </summary>
            <param name="headers">Headers.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.StartAsync(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Start the client and connect to the server.
            </summary>
            <param name="headers">Headers.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.StartWithTimeout(System.Int32,System.Collections.Specialized.NameValueCollection,System.Threading.CancellationToken)">
            <summary>
            Start the client and attempt to connect to the server until the timeout is reached.
            </summary>
            <param name="timeout">Timeout in seconds.</param>
            <param name="headers">Headers.</param>
            <param name="token">Cancellation token to terminate connection attempts.</param>
            <returns>Boolean indicating if the connection was successful.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.StartWithTimeoutAsync(System.Int32,System.Collections.Specialized.NameValueCollection,System.Threading.CancellationToken)">
            <summary>
            Start the client and attempt to connect to the server until the timeout is reached.
            </summary>
            <param name="timeout">Timeout in seconds.</param>
            <param name="headers">Headers.</param>
            <param name="token">Cancellation token to terminate connection attempts.</param>
            <returns>Task returning Boolean indicating if the connection was successful.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Stop">
            <summary>
            Disconnect the client.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.StopAsync">
            <summary>
            Disconnect the client.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Stop(System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
            Disconnect the client by code and reason.
            </summary>
            <param name="closeCode">Close code.</param>
            <param name="reason">Close by reason.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.StopAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
            Disconnect the client by code and reason.
            </summary>
            <param name="closeCode">Close code.</param>
            <param name="reason">Close by reason.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAsync(System.String,System.Net.WebSockets.WebSocketMessageType,System.Threading.CancellationToken)">
            <summary>
            Send text data to the server asynchronously.
            </summary>
            <param name="data">String data.</param>
            <param name="msgType">Message type.</param>
            <param name="token">Cancellation token allowing for termination of this request.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAsync(System.Byte[],System.Net.WebSockets.WebSocketMessageType,System.Threading.CancellationToken)">
            <summary>
            Send binary data to the server asynchronously.
            </summary>
            <param name="data">Byte array containing data.</param>
            <param name="msgType">Message type.</param>
            <param name="token">Cancellation token allowing for termination of this request.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Threading.CancellationToken)">
            <summary>
            Send binary data to the server asynchronously.
            </summary>
            <param name="data">ArraySegment containing data.</param>
            <param name="msgType">Message type.</param>
            <param name="token">Cancellation token allowing for termination of this request.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAndWaitAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Send text data to the server and wait for a response.
            </summary>
            <param name="data">String data.</param>
            <param name="timeout">Timeout, in seconds.</param>
            <param name="token">Cancellation token.</param>
            <returns>String from response.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAndWaitAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)">
            <summary>
            Send binary data to the server and wait for a response.
            </summary>
            <param name="data">Byte array containing data.</param>
            <param name="timeout">Timeout, in seconds.</param>
            <param name="token">Cancellation token.</param>
            <returns>Byte array from response.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAndWaitAsync(System.ArraySegment{System.Byte},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Send binary data to the server and wait for a response.
            </summary>
            <param name="data">ArraySegment containing data.</param>
            <param name="timeout">Timeout, in seconds.</param>
            <param name="token">Cancellation token.</param>
            <returns>Byte array from response.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Dispose(System.Boolean)">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="T:WatsonWebsocket.WatsonWsServer">
            <summary>
            Watson Websocket server.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.IsListening">
            <summary>
            Determine if the server is listening for new connections.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.EnableStatistics">
            <summary>
            Enable or disable statistics.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.ClientConnected">
            <summary>
            Event fired when a client connects.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.ClientDisconnected">
            <summary>
            Event fired when a client disconnects.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.ServerStopped">
            <summary>
            Event fired when the server stops.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.MessageReceived">
            <summary>
            Event fired when a message is received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.AcceptInvalidCertificates">
            <summary>
            Indicate whether or not invalid or otherwise unverifiable certificates should be accepted.  Default is true.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsServer.PermittedIpAddresses">
            <summary>
            Specify the IP addresses that are allowed to connect.  If none are supplied, all IP addresses are permitted.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.ListenerPrefixes">
            <summary>
            Listener prefixes.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsServer.Logger">
            <summary>
            Method to invoke when sending a log message.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsServer.HttpHandler">
            <summary>
            Method to invoke when receiving a raw (non-websocket) HTTP request.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.GuidHeader">
            <summary>
            Header used by client to indicate which GUID should be assigned.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.Stats">
            <summary>
            Statistics.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes the Watson websocket server with a single listener prefix.
            Be sure to call 'Start()' to start the server.
            By default, Watson Websocket will listen on http://localhost:9000/.
            </summary>
            <param name="hostname">The hostname or IP address upon which to listen.</param>
            <param name="port">The TCP port on which to listen.</param>
            <param name="ssl">Enable or disable SSL.</param> 
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.#ctor(System.Collections.Generic.List{System.String},System.Int32,System.Boolean)">
            <summary>
            Initializes the Watson websocket server with one or more listener prefixes.  
            Be sure to call 'Start()' to start the server.
            </summary>
            <param name="hostnames">The hostnames or IP addresses upon which to listen.</param>
            <param name="port">The TCP port on which to listen.</param>
            <param name="ssl">Enable or disable SSL.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.#ctor(System.Uri)">
            <summary>
            Initializes the Watson websocket server.
            Be sure to call 'Start()' to start the server.
            </summary>
            <param name="uri">The URI on which you wish to listen, i.e. http://localhost:9090.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.Dispose">
            <summary>
            Tear down the server and dispose of background workers.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.Start">
            <summary>
            Start the server and begin accepting new connections.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start the server and begin accepting new connections.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.Stop">
            <summary>
            Stop the server and disconnect each connection. 
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.SendAsync(System.Guid,System.String,System.Net.WebSockets.WebSocketMessageType,System.Threading.CancellationToken)">
            <summary>
            Send text data to the specified client, asynchronously.
            </summary>
            <param name="guid">Globally-unique identifier of the recipient client.</param>
            <param name="data">String containing data.</param>
            <param name="msgType">Web socket message type.</param>
            <param name="token">Cancellation token allowing for termination of this request.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.SendAsync(System.Guid,System.Byte[],System.Net.WebSockets.WebSocketMessageType,System.Threading.CancellationToken)">
            <summary>
            Send binary data to the specified client, asynchronously.
            </summary>
            <param name="guid">Globally-unique identifier of the recipient client.</param>
            <param name="data">Byte array containing data.</param> 
            <param name="msgType">Web socket message type.</param>
            <param name="token">Cancellation token allowing for termination of this request.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.SendAsync(System.Guid,System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Threading.CancellationToken)">
            <summary>
            Send binary data to the specified client, asynchronously.
            </summary>
            <param name="guid">Globally-unique identifier of the recipient client.</param>
            <param name="data">ArraySegment containing data.</param> 
            <param name="msgType">Web socket message type.</param>
            <param name="token">Cancellation token allowing for termination of this request.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.IsClientConnected(System.Guid)">
            <summary>
            Determine whether or not the specified client is connected to the server.
            </summary>
            <param name="guid">Globally-unique identifier of the recipient client.</param>
            <returns>Boolean indicating if the client is connected to the server.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.ListClients">
            <summary>
            Retrieve list of connected clients.
            </summary>
            <returns>A list containing client metadata.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.DisconnectClient(System.Guid)">
            <summary>
            Forcefully disconnect a client.
            </summary>
            <param name="guid">Globally-unique identifier of the recipient client.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.GetAwaiter">
            <summary>
            Retrieve the awaiter.
            </summary>
            <returns>TaskAwaiter.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.Dispose(System.Boolean)">
            <summary>
            Tear down the server and dispose of background workers.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
    </members>
</doc>
